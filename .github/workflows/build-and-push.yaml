name: ci

on:
  schedule:
    - cron: "0 10 * * 0" # Every Sunday at 10am
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - component: spark
            version: "1.0.4"
            latest: true
            description: The implementation of Bullet on Apache Spark Streaming.
            build-args: |
              BULLET_EXAMPLES_VERSION=1.0.0
              BULLET_KAFKA_VERSION=1.2.2
              BULLET_SPARK_VERSION=1.0.4
          - component: ui
            version: "1.1.0"
            latest: true
            description: The UI for Bullet built in Ember 3 Octane.
            build-args: |
              BULLET_UI_VERSION=1.1.0
          - component: service
            version: "1.1.0"
            latest: true
            description: The Web Service layer for Bullet.
            build-args: |
              BULLET_WS_VERSION=1.1.0
              BULLET_KAFKA_VERSION=1.2.2
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Prepare Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          flavor: |
            latest=${{ matrix.latest }}
          labels: |
            org.opencontainers.image.title=bullet-${{ matrix.component }}
            org.opencontainers.image.description=${{ matrix.description }}
            org.opencontainers.image.vendor=SketchBench
          images: |
            sketchbench/bullet-${{ matrix.component }}
            ghcr.io/SketchBench/bullet-${{ matrix.component }}
          tags: |
            type=schedule,pattern={{date 'YYYYMMDD'}}
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}},value=${{ matrix.version }}
            type=sha
            type=edge
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./components/${{ matrix.component }}
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          build-args: ${{ matrix.build-args }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=sketchbench/bullet-${{ matrix.component }}:main
          cache-to: type=inline
      - name: Inspect image
        if: github.event_name != 'pull_request'
        run: |
          docker pull sketchbench/bullet-${{ matrix.component }}:${{ matrix.version }}
          docker image inspect sketchbench/bullet-${{ matrix.component }}:${{ matrix.version }}
      - name: Check manifest
        if: github.event_name != 'pull_request'
        run: |
          docker buildx imagetools inspect sketchbench/bullet-${{ matrix.component }}:${{ matrix.version }}
      - name: Update Docker Hub repo description
        if: github.event_name != 'pull_request'
        uses: peter-evans/dockerhub-description@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: sketchbench/bullet-${{ matrix.component }}
          short-description: ${{ matrix.description }}
          readme-filepath: ./components/${{ matrix.component }}/README.md
